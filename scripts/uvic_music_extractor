#!/usr/bin/env python

"""
Script for running the music extractor
"""

import os
import sys
import argparse

import uvic_music_extractor.spectral as spectral
import uvic_music_extractor.utils as utils

def main(arguments):
    """
    Script entry
    """

    parser = argparse.ArgumentParser(
        description=__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter)

    parser.add_argument('input', help="Input audio or directory", type=str)
    parser.add_argument('--rate', '-r', help="Sample rate to run audio feature extraction", type=int, default=44100)
    parser.add_argument('--normalize', '-n', help="Normalize audio to a specified loudness in LUFS,"
                                                  "defaults to -24. Pass in None to disable",
                        default=float(-24.0))
    args = parser.parse_args(arguments)

    # Look for audio files to perform feature extraction on
    audio_files = utils.get_audio_files(args.input)
    print("Running feature extraction on {} files at a sampling rate of {}Hz".format(len(audio_files), args.rate))

    # Loop through all the audio files
    for path in audio_files:
        samples = utils.load_audio(path, args.rate, mono=False)

        if args.normalize != 'None':
            lufs = float(args.normalize)
            samples = utils.normalize_loudness(samples, args.rate, lufs)

    #spectral_results = spectral.runExtraction(args.input)
    #print(spectral_results)


if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
